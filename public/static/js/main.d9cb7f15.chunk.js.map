{"version":3,"sources":["modules/login/Login.jsx","constants/index.js","modules/login/selectors.js","modules/login/index.js","modules/login/actions.js","websocket/Websocket.js","modules/messenger/components/message/Message.jsx","modules/messenger/Messenger.jsx","modules/REST.js","modules/messenger/selectors.js","modules/messenger/index.js","modules/messenger/actions.js","modules/mainPage/MainPage.jsx","modules/mainPage/selectors.js","modules/mainPage/index.js","App.js","reportWebVitals.js","manager/login/reducer.js","manager/messenger/reducer.js","roots/rootReducer/rootReducer.js","index.js"],"names":["Login","props","handleSubmit","event","preventDefault","saveCurrentUser","state","login","handleInput","setState","target","value","this","className","onSubmit","children","name","required","onChange","minlength","placeholder","React","PureComponent","Object","defineProperties","LOG_IN","writable","LOG_OUT","SAVE_CURRENT_MESSAGE","getCurrentUserName","currentUser","getCurrentStatus","isLoged","connect","currentUserName","selectors","isUserLoged","dispatch","user","type","constants","payload","actions","Component","WS","onOpen","console","log","onClose","getOnMessage","cb","_ws","onmessage","message","data","JSON","parse","sendMessage","send","stringify","_host","window","location","origin","replace","WebSocket","onopen","bind","onclose","Message","memo","Messenger","getAllMessagesOnWS","messages","allMessages","getMessages","fetch","then","response","json","e","getAllMessages","catch","error","saveCurrentMessage","messageData","curMessage","ws","logOut","logOutUser","method","headers","body","onClick","length","map","index","getCurrentMessageData","messenger","currentMessageData","MainPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById","init"],"mappings":"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","file":"static/js/main.d9cb7f15.chunk.js","sourcesContent":["import React from 'react';\nimport './loginStyles.css';\nimport { logIn } from '../REST';\n\nclass Login extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login: null,\n        };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        \n        // logIn({ user: this.state.login })\n        //     .then(result => {\n        //         if (result) {\n                    const { saveCurrentUser } = this.props;\n\n                    saveCurrentUser(this.state.login);\n            //     }\n            // })\n            // .catch(() => alert('This user is already exist'));\n    };\n\n    handleInput = event => {\n        this.setState({\n            login: event.target.value,\n        });\n    };\n\n    render() {\n        const { handleSubmit, handleInput } = this;\n\n        return (\n            <div className='root__auth-container'>\n                <form\n                    onSubmit={handleSubmit}\n                    className='auth-container__auth-form'\n                >\n                    <span \n                        children='Authorization'\n                        className='auth-form__form-name'\n                    />\n                    <input\n                        name='login'\n                        required\n                        onChange={handleInput}\n                        minlength='4'\n                        className='auth-form__login-input'\n                        placeholder='Please Type userName'\n                    />\n                    <button\n                        className='auth-form__submit-button'\n                        children='Sign in'\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","const constants = {};\n\nexport default Object.defineProperties(constants, {\n    LOG_IN: { value: 'log_in', writable: false },\n    LOG_OUT: { value: 'log_out', writable: false },\n    SAVE_CURRENT_MESSAGE: { value: 'save_current_message', writable: false }\n})\n","export const getCurrentUserName = state => state.login.currentUser;\nexport const getCurrentStatus = state => state.login.isLoged;\n","import Component from './Login.jsx';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    currentUserName: selectors.getCurrentUserName(state),\n    isUserLoged: selectors.getCurrentStatus(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    saveCurrentUser: user => dispatch(actions.onSaveCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import constants from '../../constants';\n\nexport const onSaveCurrentUser = user => ({\n    type: constants.LOG_IN,\n    payload: user,\n});\n","export default class WS {\n    constructor() {\n        this._host = window.location.origin.replace(/^http/, 'ws');\n        this._ws = new WebSocket(this._host);\n\n        this._ws.onopen = this.onOpen.bind(this);\n        this._ws.onclose = this.onClose.bind(this);\n    }\n\n    onOpen = () => {\n        console.log('----WEBSOCKET CONNECTED---------');\n    }\n\n    onClose = () => {\n        console.log('----WEBSOCKET DISCONNECTED---------');\n    }\n\n\n    getOnMessage = cb => {\n        this._ws.onmessage = message => {\n            const { data } = message;\n            cb(JSON.parse(data));\n        }\n    }\n\n    sendMessage = message => {\n        this._ws.send(JSON.stringify(message));\n    }\n}","import React from 'react';\n\nconst Message = (props) => { \n    console.log(props)  \n    return (\n        <li className='chat-window__message'>\n            <span className='message__user-name'>{props.user}</span>\n            <span className='message__user-text'>{props.message}</span>\n        </li>\n    )\n}\n\nexport default React.memo(Message);","import React from 'react';\nimport './messangerStyled.css';\nimport { getAllMessages, logOut } from '../REST';\n\nimport WS from '../../websocket/Websocket';\nimport Message from './components/message/Message.jsx';\n\nexport default class Messenger extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curMessage: null,\n            allMessages: [],\n        };\n\n        this.ws = new WS();\n        this.ws.getOnMessage(this.getAllMessagesOnWS.bind(this));\n        this.getMessages();\n    }\n\n    getAllMessagesOnWS = messages => {\n        this.setState({\n            allMessages: messages,\n        });\n    };\n\n    getMessages = () => {\n        getAllMessages()\n            .then(messages => this.setState({\n                allMessages: messages\n            }))\n            .catch(error => console.log('it is not Array'));\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { saveCurrentMessage, currentUserName } = this.props;\n        const messageData = { user: currentUserName, message: this.state.curMessage };\n\n        saveCurrentMessage(messageData);\n        this.ws.sendMessage(messageData);\n        this.setState({\n            curMessage: '',\n        });\n    };\n\n    handleInput = event => {\n        this.setState({\n            curMessage: event.target.value,\n        });\n    };\n\n    logOut = () => {\n        const { logOutUser, currentUserName } = this.props;\n\n        logOut({ user: currentUserName });\n        logOutUser();\n    };\n\n    render() {\n        const { handleInput, logOut, handleSubmit } = this;\n        const messages = this.state.allMessages;\n\n        return (\n            <div className='root__main-container'>\n                <button\n                    onClick={logOut}\n                    className='root__log-out-btn'\n                    children='Log out'\n                />\n                <div className='main-container__chat-section'>\n                    <ul className='chat-section__chat-window'>\n                        {messages.length\n                            ? messages.map((message, index) => (\n                                  <Message \n                                    key={index}\n                                    user={message.user}\n                                    message={message.message}\n                                  />\n                              ))\n                            : null}\n                    </ul>\n                    <form \n                    onSubmit={handleSubmit} \n                    className='chat-window__chat-form'\n                    >\n                        <input\n                            value={this.state.curMessage}\n                            onChange={handleInput}\n                            className='chat-form__message-input'\n                            required\n                        />\n                        <button \n                            children='Send'\n                            className='chat-form__submit-button' \n                            />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","export function addNewMessage(newMessage) {\n    try {\n        return fetch('http://localhost:3002/addMessage', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newMessage),\n        });\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n\nexport function getAllMessages() {\n    try {\n        return fetch('http://localhost:3002/getAllMessages').then(response => response.json());\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n\nexport function logIn(user) {\n    try {\n        return fetch('http://localhost:3002/logIn', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        }).then(response => response.json());\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n\nexport function logOut(user) {\n    try {\n        return fetch('http://localhost:3002/logOut', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        });\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n","export const getCurrentUserName = state => state.login.currentUser;\nexport const getCurrentStatus = state => state.login.isLoged;\nexport const getCurrentMessageData = state => state.messenger;\n","import Component from './Messenger.jsx';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    currentUserName: selectors.getCurrentUserName(state),\n    isUserLoged: selectors.getCurrentStatus(state),\n    currentMessageData: selectors.getCurrentMessageData(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logOutUser: () => dispatch(actions.onLogOut()),\n    saveCurrentMessage: messageData => dispatch(actions.onSaveMessage(messageData))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import constants from '../../constants';\n\nexport const onLogOut = payload => ({\n    type: constants.LOG_OUT,\n    payload,\n});\n\nexport const onSaveMessage = messageData => ({\n    type: constants.SAVE_CURRENT_MESSAGE,\n    payload: {\n        user: messageData.user,\n        message: messageData.message\n    }\n})\n","import React from 'react';\nimport Login from '../login';\nimport Messenger from '../messenger';\n\nconst MainPage = props => {\n    const { isUserLoged } = props;\n\n    return (\n        <>\n            {!isUserLoged ? <Login /> : <Messenger />}\n        </>\n    )\n}\n\nexport default React.memo(MainPage);","export const getCurrentStatus = state => state.login.isLoged;","import Component from './MainPage.jsx';\nimport * as selectors from './selectors';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    isUserLoged: selectors.getCurrentStatus(state),\n});\n\nexport default connect(mapStateToProps)(Component);\n","import React from 'react';\nimport MainPage from './modules/mainPage';\n\nfunction App() {\n  return (\n      <MainPage/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import constants from '../../constants';\n\nconst initialState = {\n    currentUser: null,\n    isLoged: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case constants.LOG_IN:\n            return {\n                ...state,\n                currentUser: action.payload,\n                isLoged: true\n            }\n        case constants.LOG_OUT:\n            return {\n                ...state,\n                currentUser: null,\n                isLoged: false\n            }\n        default:\n            return state;\n    }\n}\n","import constants from '../../constants';\n\nconst initialState = {\n    user: null,\n    message: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case constants.SAVE_CURRENT_MESSAGE:\n            return {\n                ...state,\n                user: action.payload.user,\n                message: action.payload.message\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport login from '../../manager/login/reducer';\nimport messenger from '../../manager/messenger/reducer';\n\nexport default combineReducers({\n    login, messenger\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport rootReducer from './roots/rootReducer/rootReducer';\nimport { Provider } from 'react-redux';\n\n\nfunction init() {\n    const store = createStore(rootReducer)\n    window.store = store;\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\ninit();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}