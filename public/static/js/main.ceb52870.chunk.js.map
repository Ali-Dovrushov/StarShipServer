{"version":3,"sources":["modules/login/Login.jsx","modules/REST.js","constants/index.js","modules/login/selectors.js","modules/login/index.js","modules/login/actions.js","websocket/Websocket.js","modules/messenger/components/message/Message.jsx","modules/messenger/Messenger.jsx","modules/messenger/selectors.js","modules/messenger/index.js","modules/messenger/actions.js","modules/mainPage/MainPage.jsx","modules/mainPage/selectors.js","modules/mainPage/index.js","App.js","reportWebVitals.js","manager/login/reducer.js","manager/messenger/reducer.js","roots/rootReducer/rootReducer.js","index.js"],"names":["Login","props","handleSubmit","event","preventDefault","user","fetch","method","headers","body","JSON","stringify","then","response","json","e","console","log","logIn","state","login","result","saveCurrentUser","catch","alert","handleInput","setState","target","value","this","className","onSubmit","children","name","required","onChange","minlength","placeholder","React","PureComponent","Object","defineProperties","LOG_IN","writable","LOG_OUT","SAVE_CURRENT_MESSAGE","getCurrentUserName","currentUser","getCurrentStatus","isLoged","connect","currentUserName","selectors","isUserLoged","dispatch","type","constants","payload","actions","Component","WS","onOpen","onClose","getOnMessage","cb","_ws","onmessage","message","data","parse","sendMessage","send","_host","window","location","origin","replace","WebSocket","onopen","bind","onclose","Message","text","memo","Messenger","getAllMessagesOnWS","messages","allMessages","getMessages","getAllMessages","error","saveCurrentMessage","messageData","curMessage","ws","logOut","logOutUser","onClick","length","map","messageObj","index","getCurrentMessageData","messenger","currentMessageData","MainPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById","init"],"mappings":"+QAgEeA,E,kDA3DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,aAAe,SAAAC,GACXA,EAAMC,iBCQP,SAAeC,GAClB,IACI,OAAOC,MAAM,8BAA+B,CACxCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KACtBO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC/B,MAAOC,GACLC,QAAQC,IAAI,QAASF,IDhBrBG,CAAM,CAAEb,KAAM,EAAKc,MAAMC,QACpBR,MAAK,SAAAS,GACEA,IAGAC,EAF4B,EAAKrB,MAAzBqB,iBAEQ,EAAKH,MAAMC,UAGlCG,OAAM,kBAAMC,MAAM,kCAnBR,EAsBnBC,YAAc,SAAAtB,GACV,EAAKuB,SAAS,CACVN,MAAOjB,EAAMwB,OAAOC,SArBxB,EAAKT,MAAQ,CACTC,MAAO,MAJI,E,qDA4BT,IACElB,EAA8B2B,KAA9B3B,aAAcuB,EAAgBI,KAAhBJ,YAEtB,OACI,qBAAKK,UAAU,uBAAf,SACI,uBACIC,SAAU7B,EACV4B,UAAU,4BAFd,UAII,sBACIE,SAAS,gBACTF,UAAU,yBAEd,uBACIG,KAAK,QACLC,UAAQ,EACRC,SAAUV,EACVW,UAAU,IACVN,UAAU,yBACVO,YAAY,yBAEhB,wBACIP,UAAU,2BACVE,SAAS,qB,GApDbM,IAAMC,eEFXC,SAAOC,iBAFJ,GAEgC,CAC9CC,OAAQ,CAAEd,MAAO,SAAUe,UAAU,GACrCC,QAAS,CAAEhB,MAAO,UAAWe,UAAU,GACvCE,qBAAsB,CAAEjB,MAAO,uBAAwBe,UAAU,KCLxDG,EAAqB,SAAA3B,GAAK,OAAIA,EAAMC,MAAM2B,aAC1CC,EAAmB,SAAA7B,GAAK,OAAIA,EAAMC,MAAM6B,S,OCatCC,eATS,SAAA/B,GAAK,MAAK,CAC9BgC,gBAAiBC,EAA6BjC,GAC9CkC,YAAaD,EAA2BjC,OAGjB,SAAAmC,GAAQ,MAAK,CACpChC,gBAAiB,SAAAjB,GAAI,OAAIiD,ECTI,SAAAjD,GAAI,MAAK,CACtCkD,KAAMC,EAAUd,OAChBe,QAASpD,GDOyBqD,CAA0BrD,QAGjD6C,CAA6CS,G,OEdvCC,G,MACjB,aAAe,IAAD,gCAQdC,OAAS,WACL7C,QAAQC,IAAI,qCATF,KAYd6C,QAAU,WACN9C,QAAQC,IAAI,wCAbF,KAgBd8C,aAAe,SAAAC,GACX,EAAKC,IAAIC,UAAY,SAAAC,GAAY,IACrBC,EAASD,EAATC,KACRJ,EAAGtD,KAAK2D,MAAMD,MAnBR,KAuBdE,YAAc,SAAAH,GACV,EAAKF,IAAIM,KAAK7D,KAAKC,UAAUwD,KAvB7BtC,KAAK2C,MAAQC,OAAOC,SAASC,OAAOC,QAAQ,QAAS,MACrD/C,KAAKoC,IAAM,IAAIY,UAAUhD,KAAK2C,OAE9B3C,KAAKoC,IAAIa,OAASjD,KAAKgC,OAAOkB,KAAKlD,MACnCA,KAAKoC,IAAIe,QAAUnD,KAAKiC,QAAQiB,KAAKlD,QCJvCoD,EAAU,SAAChF,GACb,OACI,qBAAI6B,UAAU,uBAAd,UACI,sBAAMA,UAAU,qBAAhB,SAAsC7B,EAAMI,OAC5C,sBAAMyB,UAAU,qBAAhB,SAAsC7B,EAAMiF,WAKzC5C,MAAM6C,KAAKF,GCJLG,E,kDACjB,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAYVoF,mBAAqB,SAAAC,GACjB,EAAK5D,SAAS,CACV6D,YAAaD,KAfF,EAmBnBE,YAAc,YPbX,WACH,IACI,OAAOlF,MAAM,wCAAwCM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACjF,MAAOC,GACLC,QAAQC,IAAI,QAASF,KOUrB0E,GACK7E,MAAK,SAAA0E,GAAQ,OAAI,EAAK5D,SAAS,CAC5B6D,YAAaD,OAEhB/D,OAAM,SAAAmE,GAAK,OAAI1E,QAAQC,IAAI,uBAxBjB,EA2BnBf,aAAe,SAAAC,GACXA,EAAMC,iBADc,MAG4B,EAAKH,MAA7C0F,EAHY,EAGZA,mBACFC,EAAc,CAAEvF,KAJF,EAGQ8C,gBACiBgB,QAAS,EAAKhD,MAAM0E,YAEjEF,EAAmBC,GACnB,EAAKE,GAAGxB,YAAYsB,GACpB,EAAKlE,SAAS,CACVmE,WAAY,MApCD,EAwCnBpE,YAAc,SAAAtB,GACV,EAAKuB,SAAS,CACVmE,WAAY1F,EAAMwB,OAAOC,SA1Cd,EA8CnBmE,OAAS,WAAO,IAAD,EAC6B,EAAK9F,MAArC+F,EADG,EACHA,YPnBT,SAAgB3F,GACnB,IACWC,MAAM,+BAAgC,CACzCC,OAAQ,SACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAE3B,MAAOU,GACLC,QAAQC,IAAI,QAASF,IOWrBgF,CAAO,CAAE1F,KAHE,EACS8C,kBAGpB6C,KA/CA,EAAK7E,MAAQ,CACT0E,WAAY,KACZN,YAAa,IAGjB,EAAKO,GAAK,IAAIlC,EACd,EAAKkC,GAAG/B,aAAa,EAAKsB,mBAAmBN,KAAxB,iBACrB,EAAKS,cAVU,E,qDAqDT,IACE/D,EAAsCI,KAAtCJ,YAAasE,EAAyBlE,KAAzBkE,OAAQ7F,EAAiB2B,KAAjB3B,aACvBoF,EAAWzD,KAAKV,MAAMoE,YAE5B,OACI,sBAAKzD,UAAU,uBAAf,UACI,wBACImE,QAASF,EACTjE,UAAU,oBACVE,SAAS,YAEb,sBAAKF,UAAU,+BAAf,UACI,oBAAIA,UAAU,4BAAd,SACKwD,EAASY,OACJZ,EAASa,KAAI,SAACC,EAAYC,GAAb,OACT,cAAC,EAAD,CAEEhG,KAAM+F,EAAW/F,KACjB6E,KAAMkB,EAAWjC,SAFZkC,MAKX,OAEV,uBACAtE,SAAU7B,EACV4B,UAAU,yBAFV,UAII,uBACIF,MAAOC,KAAKV,MAAM0E,WAClB1D,SAAUV,EACVK,UAAU,2BACVI,UAAQ,IAEZ,wBACIF,SAAS,OACTF,UAAU,0C,GAzFCQ,IAAMC,eCPhCO,EAAqB,SAAA3B,GAAK,OAAIA,EAAMC,MAAM2B,aAC1CC,EAAmB,SAAA7B,GAAK,OAAIA,EAAMC,MAAM6B,SACxCqD,EAAwB,SAAAnF,GAAK,OAAIA,EAAMoF,WCcrCrD,eAXS,SAAA/B,GAAK,MAAK,CAC9BgC,gBAAiBC,EAA6BjC,GAC9CkC,YAAaD,EAA2BjC,GACxCqF,mBAAoBpD,EAAgCjC,OAG7B,SAAAmC,GAAQ,MAAK,CACpC0C,WAAY,kBAAM1C,ECVc,CAChCC,KAAMC,EAAUZ,QAChBa,YAFoB,IAAAA,GDWpBkC,mBAAoB,SAAAC,GAAW,OAAItC,ECNV,SAAAsC,GAAW,MAAK,CACzCrC,KAAMC,EAAUX,qBAChBY,QAAS,CACLpD,KAAMuF,EAAYvF,KAClB8D,QAASyB,EAAYzB,UDEmBT,CAAsBkC,QAGvD1C,CAA6CS,GEZtD8C,EAAW,SAAAxG,GAAU,IACfoD,EAAgBpD,EAAhBoD,YAER,OACI,mCACMA,EAA0B,cAAC,EAAD,IAAZ,cAAC,EAAD,OAKbf,MAAM6C,KAAKsB,GCdbzD,EAAmB,SAAA7B,GAAK,OAAIA,EAAMC,MAAM6B,SCQtCC,eAJS,SAAA/B,GAAK,MAAK,CAC9BkC,YAAaD,EAA2BjC,MAG7B+B,CAAyBS,GCCzB+C,MANf,WACE,OACI,cAAC,EAAD,KCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCLRO,EAAe,CACjBpE,YAAa,KACbE,SAAS,GCFPkE,EAAe,CACjB9G,KAAM,KACN8D,QAAS,MCAEiD,cAAgB,CAC3BhG,MFEW,WAAmC,IAAlCD,EAAiC,uDAAzBgG,EAAcE,EAAW,uCAC7C,OAAQA,EAAO9D,MACX,KAAKC,EAAUd,OACX,OAAO,2BACAvB,GADP,IAEI4B,YAAasE,EAAO5D,QACpBR,SAAS,IAEjB,KAAKO,EAAUZ,QACX,OAAO,2BACAzB,GADP,IAEI4B,YAAa,KACbE,SAAS,IAEjB,QACI,OAAO9B,IEjBRoF,UDEI,WAAmC,IAAlCpF,EAAiC,uDAAzBgG,EAAcE,EAAW,uCAC7C,OAAQA,EAAO9D,MACX,KAAKC,EAAUX,qBACX,OAAO,2BACA1B,GADP,IAEId,KAAMgH,EAAO5D,QAAQpD,KACrB8D,QAASkD,EAAO5D,QAAQU,UAEhC,QACI,OAAOhD,OENnB,WACI,IAAMmG,EAAQC,YAAYC,GAC1B/C,OAAO6C,MAAQA,EAEfG,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJK,SAASC,eAAe,SAIhCC,GAKAlB,M","file":"static/js/main.ceb52870.chunk.js","sourcesContent":["import React from 'react';\nimport './loginStyles.css';\nimport { logIn } from '../REST';\n\nclass Login extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login: null,\n        };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        \n        logIn({ user: this.state.login })\n            .then(result => {\n                if (result) {\n                    const { saveCurrentUser } = this.props;\n\n                    saveCurrentUser(this.state.login);\n                }\n            })\n            .catch(() => alert('This user is already exist'));\n    };\n\n    handleInput = event => {\n        this.setState({\n            login: event.target.value,\n        });\n    };\n\n    render() {\n        const { handleSubmit, handleInput } = this;\n\n        return (\n            <div className='root__auth-container'>\n                <form\n                    onSubmit={handleSubmit}\n                    className='auth-container__auth-form'\n                >\n                    <span \n                        children='Authorization'\n                        className='auth-form__form-name'\n                    />\n                    <input\n                        name='login'\n                        required\n                        onChange={handleInput}\n                        minlength='4'\n                        className='auth-form__login-input'\n                        placeholder='Please Type userName'\n                    />\n                    <button\n                        className='auth-form__submit-button'\n                        children='Sign in'\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","export function addNewMessage(newMessage) {\n    try {\n        return fetch('http://localhost:3002/addMessage', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newMessage),\n        });\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n\nexport function getAllMessages() {\n    try {\n        return fetch('http://localhost:3002/getAllMessages').then(response => response.json());\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n\nexport function logIn(user) {\n    try {\n        return fetch('http://localhost:3002/logIn', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        }).then(response => response.json());\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n\nexport function logOut(user) {\n    try {\n        return fetch('http://localhost:3002/logOut', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        });\n    } catch (e) {\n        console.log('ERROR', e);\n    }\n}\n","const constants = {};\n\nexport default Object.defineProperties(constants, {\n    LOG_IN: { value: 'log_in', writable: false },\n    LOG_OUT: { value: 'log_out', writable: false },\n    SAVE_CURRENT_MESSAGE: { value: 'save_current_message', writable: false }\n})\n","export const getCurrentUserName = state => state.login.currentUser;\nexport const getCurrentStatus = state => state.login.isLoged;\n","import Component from './Login.jsx';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    currentUserName: selectors.getCurrentUserName(state),\n    isUserLoged: selectors.getCurrentStatus(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    saveCurrentUser: user => dispatch(actions.onSaveCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import constants from '../../constants';\n\nexport const onSaveCurrentUser = user => ({\n    type: constants.LOG_IN,\n    payload: user,\n});\n","export default class WS {\n    constructor() {\n        this._host = window.location.origin.replace(/^http/, 'ws');\n        this._ws = new WebSocket(this._host);\n\n        this._ws.onopen = this.onOpen.bind(this);\n        this._ws.onclose = this.onClose.bind(this);\n    }\n\n    onOpen = () => {\n        console.log('----WEBSOCKET CONNECTED---------');\n    }\n\n    onClose = () => {\n        console.log('----WEBSOCKET DISCONNECTED---------');\n    }\n\n    getOnMessage = cb => {\n        this._ws.onmessage = message => {\n            const { data } = message;\n            cb(JSON.parse(data));\n        }\n    }\n\n    sendMessage = message => {\n        this._ws.send(JSON.stringify(message));\n    }\n}","import React from 'react';\n\nconst Message = (props) => { \n    return (\n        <li className='chat-window__message'>\n            <span className='message__user-name'>{props.user}</span>\n            <span className='message__user-text'>{props.text}</span>\n        </li>\n    )\n}\n\nexport default React.memo(Message);","import React from 'react';\nimport './messangerStyled.css';\nimport { getAllMessages, logOut } from '../REST';\n\nimport WS from '../../websocket/Websocket';\nimport Message from './components/message/Message.jsx';\n\nexport default class Messenger extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curMessage: null,\n            allMessages: [],\n        };\n\n        this.ws = new WS();\n        this.ws.getOnMessage(this.getAllMessagesOnWS.bind(this));\n        this.getMessages();\n    }\n\n    getAllMessagesOnWS = messages => {\n        this.setState({\n            allMessages: messages,\n        });\n    };\n\n    getMessages = () => {\n        getAllMessages()\n            .then(messages => this.setState({\n                allMessages: messages\n            }))\n            .catch(error => console.log('it is not Array'));\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { saveCurrentMessage, currentUserName } = this.props;\n        const messageData = { user: currentUserName, message: this.state.curMessage };\n\n        saveCurrentMessage(messageData);\n        this.ws.sendMessage(messageData);\n        this.setState({\n            curMessage: '',\n        });\n    };\n\n    handleInput = event => {\n        this.setState({\n            curMessage: event.target.value,\n        });\n    };\n\n    logOut = () => {\n        const { logOutUser, currentUserName } = this.props;\n\n        logOut({ user: currentUserName });\n        logOutUser();\n    };\n\n    render() {\n        const { handleInput, logOut, handleSubmit } = this;\n        const messages = this.state.allMessages;\n\n        return (\n            <div className='root__main-container'>\n                <button\n                    onClick={logOut}\n                    className='root__log-out-btn'\n                    children='Log out'\n                />\n                <div className='main-container__chat-section'>\n                    <ul className='chat-section__chat-window'>\n                        {messages.length\n                            ? messages.map((messageObj, index) => (\n                                  <Message \n                                    key={index}\n                                    user={messageObj.user}\n                                    text={messageObj.message}\n                                  />\n                              ))\n                            : null}\n                    </ul>\n                    <form \n                    onSubmit={handleSubmit} \n                    className='chat-window__chat-form'\n                    >\n                        <input\n                            value={this.state.curMessage}\n                            onChange={handleInput}\n                            className='chat-form__message-input'\n                            required\n                        />\n                        <button \n                            children='Send'\n                            className='chat-form__submit-button' \n                            />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","export const getCurrentUserName = state => state.login.currentUser;\nexport const getCurrentStatus = state => state.login.isLoged;\nexport const getCurrentMessageData = state => state.messenger;\n","import Component from './Messenger.jsx';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    currentUserName: selectors.getCurrentUserName(state),\n    isUserLoged: selectors.getCurrentStatus(state),\n    currentMessageData: selectors.getCurrentMessageData(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logOutUser: () => dispatch(actions.onLogOut()),\n    saveCurrentMessage: messageData => dispatch(actions.onSaveMessage(messageData))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import constants from '../../constants';\n\nexport const onLogOut = payload => ({\n    type: constants.LOG_OUT,\n    payload,\n});\n\nexport const onSaveMessage = messageData => ({\n    type: constants.SAVE_CURRENT_MESSAGE,\n    payload: {\n        user: messageData.user,\n        message: messageData.message\n    }\n})\n","import React from 'react';\nimport Login from '../login';\nimport Messenger from '../messenger';\n\nconst MainPage = props => {\n    const { isUserLoged } = props;\n\n    return (\n        <>\n            {!isUserLoged ? <Login /> : <Messenger />}\n        </>\n    )\n}\n\nexport default React.memo(MainPage);","export const getCurrentStatus = state => state.login.isLoged;","import Component from './MainPage.jsx';\nimport * as selectors from './selectors';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    isUserLoged: selectors.getCurrentStatus(state),\n});\n\nexport default connect(mapStateToProps)(Component);\n","import React from 'react';\nimport MainPage from './modules/mainPage';\n\nfunction App() {\n  return (\n      <MainPage/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import constants from '../../constants';\n\nconst initialState = {\n    currentUser: null,\n    isLoged: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case constants.LOG_IN:\n            return {\n                ...state,\n                currentUser: action.payload,\n                isLoged: true\n            }\n        case constants.LOG_OUT:\n            return {\n                ...state,\n                currentUser: null,\n                isLoged: false\n            }\n        default:\n            return state;\n    }\n}\n","import constants from '../../constants';\n\nconst initialState = {\n    user: null,\n    message: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case constants.SAVE_CURRENT_MESSAGE:\n            return {\n                ...state,\n                user: action.payload.user,\n                message: action.payload.message\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport login from '../../manager/login/reducer';\nimport messenger from '../../manager/messenger/reducer';\n\nexport default combineReducers({\n    login, messenger\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport rootReducer from './roots/rootReducer/rootReducer';\nimport { Provider } from 'react-redux';\n\n\nfunction init() {\n    const store = createStore(rootReducer)\n    window.store = store;\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\ninit();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}